import{_ as P,u as x,a as N,r as n,p as q,l as A,q as E,c as l,w as I,b as r,v as O,F as h,d as y,m as f,o as i,t as d,s as g,x as Q}from"./index-BUOmST_B.js";import{m as V}from"./mqtt.esm-B6YgMEGc.js";const B={key:0,class:"password-prompt"},C={key:1,class:"monitor-container"},j={class:"gateway-header"},F={class:"sensor-grid"},H={class:"sensor-label"},J={class:"sensor-value"},U={class:"history-control-section"},$={class:"button-group"},z=["onClick"],L={__name:"DataMonitor",setup(G){const m=x(),p=N({}),c=n(""),_=n(!0);let a=null;n(!1),n(!1),n(!1),n(null),n("更新历史数据");const w=e=>{const o=Q.resolve({name:"HistoryData",params:{mac:e},query:{timestamp:Date.now()}}).href;window.open(o,"_blank")},k=q(()=>Object.entries(p).map(([e,o])=>({mac:e,alias:o.mac_alias||e,online:o.is_online,sensors:o.keys.filter(s=>s.device_type===1).map(s=>({...s,alias:s.key_alias||s.mac_key,value:s.value||"N/A"})),controllers:o.keys.filter(s=>s.device_type===2).map(s=>({...s,alias:s.key_alias||s.mac_key,value:s.value||"N/A"}))}))),b=async()=>{try{const e=await f.get("/api/iot/devices",{params:{userId:m.userId}});Object.entries(e.data).forEach(([o,s])=>{s.rawMac=o;try{const t=JSON.parse(s.msg||"{}").msg||{};s.keys.forEach(u=>{u.value=t[u.mac_key]||"N/A"})}catch(t){console.error("设备消息解析失败:",t)}p[o]={...s}})}catch(e){console.error("获取设备失败:",e)}},S=(e,o)=>{const s=p[e];if(!s){console.warn(`未注册设备: ${e}`);return}s.keys.forEach(t=>{o[t.mac_key]!==void 0&&(t.value=o[t.mac_key])})},M=async()=>{if(a!=null&&a.connected){console.log("复用现有 MQTT 连接");return}try{const e=await f.post("/api/iot/get_topic",{username:m.username,password:c.value});a=V.connect("ws://lichen129.icu:8083/mqtt",{clientId:"11111111111111111",username:m.username,password:c.value,protocolVersion:5}),a.on("connect",()=>{console.log("MQTT 连接成功"),a.subscribe(e.data.topic,o=>{o?console.error("订阅失败:",o):console.log("订阅成功:",e.data.topic)})}),a.on("message",(o,s)=>{try{const t=s.toString(),u=t.match(/^\[([^\]]+)\]/);if(!u){console.error("消息缺少 MAC 标识:",t);return}const T=u[1],D=JSON.parse(t.replace(/^\[[^\]]+\]/,""));S(T,D.msg)}catch(t){console.error("消息解析失败:",t)}})}catch(e){throw console.error("MQTT 初始化失败:",e),e}},v=async()=>{try{await M(),_.value=!1,sessionStorage.setItem("mqttPassword",c.value)}catch{_.value=!0,sessionStorage.removeItem("mqttPassword")}};return A(()=>{const e=sessionStorage.getItem("mqttPassword");e&&(c.value=e,v()),b()}),E(()=>{a!=null&&a.connected&&(a.end(!0),console.log("MQTT 连接已断开"))}),(e,o)=>_.value?(i(),l("div",B,[I(r("input",{"onUpdate:modelValue":o[0]||(o[0]=s=>c.value=s),type:"password",placeholder:"请输入密码"},null,512),[[O,c.value]]),r("button",{onClick:v},"提交")])):(i(),l("div",C,[(i(!0),l(h,null,y(k.value,s=>(i(),l("div",{key:s.mac,class:"gateway-card"},[r("div",j,[r("h3",null,d(s.alias),1),r("span",{class:g(["status",s.online?"online":"offline"])},d(s.online?"在线":"离线"),3)]),r("div",F,[(i(!0),l(h,null,y([...s.sensors,...s.controllers],t=>(i(),l("div",{key:t.key,class:g(t.device_type===1?"sensor-item":"controller-item")},[r("div",H,d(t.alias),1),r("div",J,d(t.value),1)],2))),128))]),r("div",U,[r("div",$,[r("button",{class:"history-btn",onClick:t=>w(s.mac)}," 查看历史数据 ",8,z)])])]))),128))]))}},W=P(L,[["__scopeId","data-v-2f88de0c"]]);export{W as default};
