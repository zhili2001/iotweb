import{_ as x,u as Q,a as V,r as g,p as A,l as O,q as E,c as r,w as N,b as a,v as $,F as T,d as S,m as M,o as i,t as k,s as B}from"./index-BUOmST_B.js";import{m as D}from"./mqtt.esm-B6YgMEGc.js";const J={key:0,class:"password-prompt"},j={key:1,class:"automation-view"},F={class:"automation-container"},U={class:"gateway-header"},z={class:"automation-grid"},L={class:"automation-label"},G={class:"switch"},H=["checked","onChange","disabled"],K={__name:"AutomationView",setup(R){const y=Q(),_=V({}),l=g(null),h=g(""),c=g(""),w=g(!0),I=A(()=>Object.entries(_).map(([s,o])=>({mac:s,alias:o.mac_alias||s,online:o.is_online,automations:o.keys.filter(e=>parseInt(e.device_type)===3).map(e=>({key:e.mac_key,alias:e.key_alias||e.mac_key,value:e.value||0}))}))),q=async()=>{try{const s=await M.get("/api/iot/devices",{params:{userId:y.userId}});Object.entries(s.data).forEach(([o,e])=>{try{const t=JSON.parse(e.msg||"{}").msg||{};e.keys.forEach(n=>n.value=t[n.mac_key]||0)}catch(t){console.error("设备消息解析失败:",t)}_[o]={...e}})}catch(s){console.error("获取设备失败:",s)}},C=(s,o,e)=>{var d;if(!((d=l.value)!=null&&d.connected)){alert("MQTT连接失败，请重试！");return}const t=e===1?0:1,n=JSON.stringify({msg:{[o]:t.toString()}}),u=`[${s}]${n}`;l.value.publish(h.value,u,m=>{var v;if(m)console.error("发送失败:",m),alert("指令发送失败");else{console.log("指令已发送:",u);const p=(v=_[s])==null?void 0:v.keys.find(f=>f.mac_key===o);p&&(p.value=t)}})},P=async()=>{var s;if(!((s=l.value)!=null&&s.connected))try{const o=await M.post("/api/iot/get_topic",{username:y.username,password:c.value});h.value=o.data.topic,l.value=D.connect("ws://lichen129.icu:8083/mqtt",{clientId:"11111111111111111",username:y.username,password:c.value,protocolVersion:5}),l.value.on("connect",()=>{console.log("MQTT 连接成功"),l.value.subscribe(h.value,e=>{e?console.error("订阅失败:",e):console.log("订阅成功:",h.value)})}),l.value.on("message",(e,t)=>{try{const n=t.toString(),u=n.match(/^\[([^\]]+)\]/);if(!u)return console.error("消息缺少 MAC 标识:",n);const d=u[1],m=JSON.parse(n.replace(/^\[[^\]]+\]/,""));console.log("[MQTT消息]",m);const v=_[d];if(!v)return console.warn(`未注册设备: ${d}`);v.keys.forEach(p=>{const f=m.msg[p.mac_key];f!==void 0&&(p.value=parseInt(f))})}catch(n){console.error("消息解析失败:",n)}}),l.value.on("error",e=>console.error("MQTT 错误:",e)),l.value.on("close",()=>console.log("MQTT 连接已关闭"))}catch(o){console.error("MQTT 初始化失败:",o)}},b=async()=>{try{await P(),w.value=!1,sessionStorage.setItem("mqttPassword",c.value),q()}catch{w.value=!0,sessionStorage.removeItem("mqttPassword")}};return O(()=>{const s=sessionStorage.getItem("mqttPassword");s&&(c.value=s,b())}),E(()=>{var s;return(s=l.value)==null?void 0:s.end(!0)}),(s,o)=>w.value?(i(),r("div",J,[N(a("input",{"onUpdate:modelValue":o[0]||(o[0]=e=>c.value=e),type:"password",placeholder:"请输入密码"},null,512),[[$,c.value]]),a("button",{onClick:b},"提交")])):(i(),r("div",j,[a("div",F,[(i(!0),r(T,null,S(I.value,e=>(i(),r("div",{key:e.mac,class:"gateway-card"},[a("div",U,[a("h3",null,k(e.alias),1),a("span",{class:B(["status",e.online?"online":"offline"])},k(e.online?"在线":"离线"),3)]),a("div",z,[(i(!0),r(T,null,S(e.automations,t=>(i(),r("div",{key:t.key,class:"automation-item"},[a("div",L,k(t.alias),1),a("label",G,[a("input",{type:"checkbox",checked:t.value===1,onChange:n=>C(e.mac,t.key,t.value),disabled:!e.online},null,40,H),o[1]||(o[1]=a("span",{class:"slider"},null,-1))])]))),128))]),o[2]||(o[2]=a("div",{class:"control-section"},null,-1))]))),128))])]))}},Y=x(K,[["__scopeId","data-v-c2b1932f"]]);export{Y as default};
